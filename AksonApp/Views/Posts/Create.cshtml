@model AksonApp.Models.Post
@using AksonApp.Models

@{
    ViewBag.Title = "Create Blog";
    ApplicationDbContext _db = new ApplicationDbContext();
    var userName = User.Identity.Name;
}
@if (ViewBag.Error != null)
{
    <script>
        alert("@ViewBag.Error");
    </script>
}
<div class="container">
    <div class="card card-container" style="max-width:100%!important;width:1600px">
        <h3><b>@ViewBag.Title</b></h3>

        @using (Html.BeginForm("Tag", "Posts", FormMethod.Get))
        {
        <div class="form-horizontal">
            <div class="form-group">
                <div class="col-md-10 form-inline">
                    <input type="text" class="form-control" required name="tag" style="max-width: 100%" />&nbsp;&nbsp;<button type="submit" class="btn btn-primary"><span class="fa fa-plus"></span> Add Tag</button>
                </div>
            </div>
            <div class="form-group col-sm-10">
                @{
                    var tagFound = _db.Tag.Where(m => m.Author == userName && m.Post == null || m.Post == "");
                    foreach (var item in tagFound)
                    {
                        <a class="btn btn-info btn-sm" href="@Url.Action("DeleteTag","Posts", new { id = item.Id})">@item.KeyWord <span class="fa fa-trash"></span></a><text>&nbsp;&nbsp;</text>
                    }
                }
            </div>
        </div>
                }


                @using (Html.BeginForm("Create", "Posts", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", style = "max-width: 100%;", required = "required" })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.LabelFor(model => model.Blurb, htmlAttributes: new { @class = "control-label" })
                                <textarea class="form-control" name="Blurb" style="max-width: 100%" required></textarea>
                                @Html.ValidationMessageFor(model => model.Blurb, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })
                                <input type="file" name="file" required />
                                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                <button class="btn btn-success">Create Blog</button> | <a class="btn btn-danger" href="@Url.Action("ManageBlogs")">Go Back</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@using PagedList
@using PagedList.Mvc
@model IPagedList<AksonApp.Models.Products>

@{
    ViewBag.Title = "Index";
}
<style>
    a {
        color: indianred;
    }
</style>
<h2>Manage Spares</h2>

<p>
    <div class="row">
        <div class="col-sm-2">
            <a class="btn btn-success" href="@Url.Action("Create")">Add Spares</a>
        </div>
        @using (Html.BeginForm("Index", "ManageProducts", FormMethod.Get))
        {
            <div class="col-sm-2">
                @Html.DropDownList("Sort", (SelectList)ViewBag.List, "Filter", new { @class = "form-control" })
            </div>
            <div class="col-sm-2">
                @Html.DropDownList("Order", (SelectList)ViewBag.ListTwo, "Filter", new { @class = "form-control" })
            </div>
            <div class="col-sm-2">
                <button class="btn btn-success" type="submit"><span class="fa fa-filter"></span></button>
            </div>
        }


        @using (Html.BeginForm("Index", "ManageProducts", FormMethod.Get))
        {
            <div class="col-sm-2">
                <input type="text" placeholder="search by product" name="search" class="form-control" />
            </div>
            <div class="col-sm-2">
                <button class="btn btn-success" onclick="this.form.submit(); this.disable = 'true'; this.value = 'Searching..'" type="submit"><span class="fa fa-search"></span></button>
            </div>
        }
    </div>

</p>
<table class="table table-hover" id="postForm">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductImage)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductRating)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().StockAvaliable)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().StockRemaining)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().StockSold)
        </th>
        <th>
            Action
        </th>
    </tr>
    @if (Model.Count() > 0)
    {

        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductImage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductRating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StockAvaliable)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StockRemaining)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StockSold)
                </td>
                <td>
                    <a style="text-decoration:none" href="@Url.Action("Edit", new { id=item.Id })"><b>Edit</b></a> |
                    <a style="text-decoration:none" href="@Url.Action("Details", new { id=item.Id })"><b>Details</b></a> |
                    <a style="text-decoration:none" href="@Url.Action("Delete", new { id=item.Id })"><b>Delete</b></a>
                </td>
            </tr>
        }

    }
    else
    {
        <tr>
            <td colspan="8" style="text-align:center">
                <h1 style="font-size:52px;color:gray"> No Records To Display </h1>
            </td>
        </tr>
    }
</table>
<ul class="pagination">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
        new PagedListRenderOptions() { Display = PagedListDisplayMode.Always, DisplayPageCountAndCurrentLocation = true })
</ul>